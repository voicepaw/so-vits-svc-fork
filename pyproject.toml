[tool.poetry]
name = "so-vits-svc-fork"
version = "4.2.26"
description = "A fork of so-vits-svc."
authors = ["34j <34j.95a2p@simplelogin.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/34j/so-vits-svc-fork"
documentation = "https://so-vits-svc-fork.readthedocs.io"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
]
packages = [
    { include = "so_vits_svc_fork", from = "src" },
]

[tool.poetry.scripts]
so-vits-svc-fork = "so_vits_svc_fork.__main__:cli"
svc = "so_vits_svc_fork.__main__:cli"
svcf = "so_vits_svc_fork.__main__:cli"
svcg = "so_vits_svc_fork.gui:main"
svc-gui = "so_vits_svc_fork.gui:main"
svcf-gui = "so_vits_svc_fork.gui:main"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/34j/so-vits-svc-fork/issues"
"Changelog" = "https://github.com/34j/so-vits-svc-fork/blob/main/CHANGELOG.md"

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
librosa = "*"
numpy = "^2.0.0"
pyworld = "*"
requests = "*"
scipy = "*"
sounddevice = "*"
SoundFile = "*"
tqdm = "*"
praat-parselmouth = "*"
onnx = "*"
onnxsim = "*"
onnxoptimizer = "*"
torch = "^2"
torchaudio = "*"
tensorboard = "*"
rich = "*"
tqdm-joblib = "^0.0.4"
tensorboardx = "*"
cm-time = ">=0.1.2"
pebble = ">=5.0"
torchcrepe = ">=0.0.17"
lightning = "^2.0.1"
fastapi = "==0.111.1"
transformers = "^4.28.1"
matplotlib = "^3.7.1"
click = "^8.1.7"
setuptools = "^69.5.1"
pysimplegui-4-foss = "^4.60.4.1"

[tool.poetry.group.dev.dependencies]
pre-commit = ">=3"
pytest = "^8.0.0"
pytest-cov = "^4.0.0"
pipdeptree = "^2.7.0"
pip-licenses = "^5.0.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
myst-parser = ">=0.16"
sphinx = ">=4.0"
sphinx-rtd-theme = ">=1.0"

[tool.semantic_release]
branch = "main"
version_toml = "pyproject.toml:tool.poetry.version"
version_variable = "src/so_vits_svc_fork/__init__.py:__version__"
build_command = "pip install poetry && poetry build"

[tool.pytest.ini_options]
addopts = "-v -Wdefault --cov=so_vits_svc_fork --cov-report=term-missing:skip-covered"
pythonpath = ["src"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@overload",
    "if TYPE_CHECKING",
    "raise NotImplementedError",
    'if __name__ == "__main__":',
]

[tool.isort]
profile = "black"
known_first_party = ["so_vits_svc_fork", "tests"]

[tool.autoflake]
remove_all_unused_imports = true

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
mypy_path = "src/"
no_implicit_optional = true
show_error_codes = true
warn_unreachable = true
warn_unused_ignores = true
exclude = [
    'docs/.*',
    'setup.py',
]

[[tool.mypy.overrides]]
module = "tests.*"
allow_untyped_defs = true

[[tool.mypy.overrides]]
module = "docs.*"
ignore_errors = true

[tool.bandit]
exclude_dirs = ["src"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
